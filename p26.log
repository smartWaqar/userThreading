Dump of assembler code for function pfc:
   0x0000000000000d80 <+0>:	push   %rbp
   0x0000000000000d81 <+1>:	push   %rbx
   0x0000000000000d82 <+2>:	lea    0xc6f(%rip),%rsi        # 0x19f8
   0x0000000000000d89 <+9>:	mov    $0x1,%edi
   0x0000000000000d8e <+14>:	xor    %eax,%eax
   0x0000000000000d90 <+16>:	lea    0x202669(%rip),%rbp        # 0x203400 <UserThreadingVec>
   0x0000000000000d97 <+23>:	sub    $0x8,%rsp
   0x0000000000000d9b <+27>:	mov    %fs:0xfffffffffffffffc,%edx
   0x0000000000000da3 <+35>:	callq  0x970 <__printf_chk@plt>
   0x0000000000000da8 <+40>:	mov    0x202651(%rip),%rax        # 0x203400 <UserThreadingVec>
   0x0000000000000daf <+47>:	xor    %esi,%esi
   0x0000000000000db1 <+49>:	mov    %rax,0x2028c8(%rip)        # 0x203680 <UserThreadingVec+640>
   0x0000000000000db8 <+56>:	mov    0x202841(%rip),%rax        # 0x203600 <UserThreadingVec+512>
   0x0000000000000dbf <+63>:	mov    %rax,0x2026ba(%rip)        # 0x203480 <UserThreadingVec+128>
   0x0000000000000dc6 <+70>:	nopw   %cs:0x0(%rax,%rax,1)
   0x0000000000000dd0 <+80>:	mov    %fs:0xfffffffffffffffc,%eax
   0x0000000000000dd8 <+88>:	test   %eax,%eax
   0x0000000000000dda <+90>:	jne    0x1088 <pfc+776>
   0x0000000000000de0 <+96>:	mov    0x202499(%rip),%rax        # 0x203280 <global_var1>
   0x0000000000000de7 <+103>:	add    $0x1,%rax
   0x0000000000000deb <+107>:	mov    %rax,0x20248e(%rip)        # 0x203280 <global_var1>
   0x0000000000000df2 <+114>:	movslq %fs:0xfffffffffffffffc,%rdx
   0x0000000000000dfb <+123>:	shl    $0x9,%rdx
   0x0000000000000dff <+127>:	add    %rbp,%rdx
   0x0000000000000e02 <+130>:	mov    0xc0(%rdx),%rax
   0x0000000000000e09 <+137>:	lea    0x1000(%rax),%rbx
   0x0000000000000e10 <+144>:	mov    0x80(%rdx),%rax
   0x0000000000000e17 <+151>:	add    $0x1000,%rax
   0x0000000000000e1d <+157>:	cmpb   $0x0,0x1c0(%rdx)
   0x0000000000000e24 <+164>:	jne    0xfe0 <pfc+608>
   0x0000000000000e2a <+170>:	movb   $0x1,0x1c0(%rdx)
   0x0000000000000e31 <+177>:	mov    %rsp,(%rax)
   0x0000000000000e34 <+180>:	lea    0x75(%rip),%rcx        # 0xeb0 <pfc+304>
   0x0000000000000e3b <+187>:	mov    %rcx,0x8(%rax)
   0x0000000000000e3f <+191>:	mov    %rdx,0x10(%rax)
   0x0000000000000e43 <+195>:	mov    %r8,0x18(%rax)
   0x0000000000000e47 <+199>:	mov    %r9,0x20(%rax)
   0x0000000000000e4b <+203>:	mov    %r10,0x28(%rax)
   0x0000000000000e4f <+207>:	mov    %r11,0x30(%rax)
   0x0000000000000e53 <+211>:	mov    %r12,0x38(%rax)
   0x0000000000000e57 <+215>:	mov    %r13,0x40(%rax)
   0x0000000000000e5b <+219>:	mov    %r14,0x48(%rax)
   0x0000000000000e5f <+223>:	mov    %r15,0x50(%rax)
   0x0000000000000e63 <+227>:	mov    %rbp,0x58(%rax)
   0x0000000000000e67 <+231>:	mov    %rdi,0x60(%rax)
   0x0000000000000e6b <+235>:	mov    %rsi,0x68(%rax)
   0x0000000000000e6f <+239>:	movq   $0x0,0x70(%rax)
   0x0000000000000e77 <+247>:	mov    (%rbx),%rsp
   0x0000000000000e7a <+250>:	mov    0x40(%rbx),%r13
   0x0000000000000e7e <+254>:	mov    0x8(%rbx),%rcx
   0x0000000000000e82 <+258>:	mov    0x10(%rbx),%rdx
   0x0000000000000e86 <+262>:	mov    0x18(%rbx),%r8
   0x0000000000000e8a <+266>:	mov    0x20(%rbx),%r9
   0x0000000000000e8e <+270>:	mov    0x28(%rbx),%r10
   0x0000000000000e92 <+274>:	mov    0x30(%rbx),%r11
   0x0000000000000e96 <+278>:	mov    0x38(%rbx),%r12
   0x0000000000000e9a <+282>:	mov    0x48(%rbx),%r14
   0x0000000000000e9e <+286>:	mov    0x50(%rbx),%r15
   0x0000000000000ea2 <+290>:	mov    0x58(%rbx),%rbp
   0x0000000000000ea6 <+294>:	mov    0x60(%rbx),%rdi
   0x0000000000000eaa <+298>:	mov    0x68(%rbx),%rsi
   0x0000000000000eae <+302>:	jmpq   *%rcx
   0x0000000000000eb0 <+304>:	mov    %esi,0x20224a(%rip)        # 0x203100 <myglobal>
   0x0000000000000eb6 <+310>:	add    $0x1,%esi
   0x0000000000000eb9 <+313>:	cmp    $0xa,%esi
   0x0000000000000ebc <+316>:	jne    0xdd0 <pfc+80>
   0x0000000000000ec2 <+322>:	lea    0xbaf(%rip),%rdi        # 0x1a78
   0x0000000000000ec9 <+329>:	callq  0x920 <puts@plt>
   0x0000000000000ece <+334>:	mov    %fs:0xfffffffffffffffc,%eax
   0x0000000000000ed6 <+342>:	add    $0x1,%eax
   0x0000000000000ed9 <+345>:	mov    %eax,%edx
   0x0000000000000edb <+347>:	shr    $0x1f,%edx
   0x0000000000000ede <+350>:	add    %edx,%eax
   0x0000000000000ee0 <+352>:	and    $0x1,%eax
   0x0000000000000ee3 <+355>:	sub    %edx,%eax
   0x0000000000000ee5 <+357>:	cltq   
   0x0000000000000ee7 <+359>:	shl    $0x9,%rax
   0x0000000000000eeb <+363>:	add    %rbp,%rax
   0x0000000000000eee <+366>:	movb   $0x1,0x100(%rax)
   0x0000000000000ef5 <+373>:	movslq %fs:0xfffffffffffffffc,%rax
   0x0000000000000efe <+382>:	shl    $0x9,%rax
   0x0000000000000f02 <+386>:	add    %rbp,%rax
   0x0000000000000f05 <+389>:	movb   $0x1,0x100(%rax)
   0x0000000000000f0c <+396>:	movslq %fs:0xfffffffffffffffc,%rax
   0x0000000000000f15 <+405>:	shl    $0x9,%rax
   0x0000000000000f19 <+409>:	add    %rax,%rbp
   0x0000000000000f1c <+412>:	mov    0xc0(%rbp),%rax
   0x0000000000000f23 <+419>:	lea    0x1000(%rax),%rbx
   0x0000000000000f2a <+426>:	mov    0x80(%rbp),%rax
   0x0000000000000f31 <+433>:	add    $0x1000,%rax
   0x0000000000000f37 <+439>:	cmpb   $0x0,0x1c0(%rbp)
   0x0000000000000f3e <+446>:	je     0x10a0 <pfc+800>
   0x0000000000000f44 <+452>:	movb   $0x0,0x1c0(%rbp)
   0x0000000000000f4b <+459>:	mov    %rsp,(%rax)
   0x0000000000000f4e <+462>:	lea    0x75(%rip),%rcx        # 0xfca <pfc+586>
   0x0000000000000f55 <+469>:	mov    %rcx,0x8(%rax)
   0x0000000000000f59 <+473>:	mov    %rdx,0x10(%rax)
   0x0000000000000f5d <+477>:	mov    %r8,0x18(%rax)
   0x0000000000000f61 <+481>:	mov    %r9,0x20(%rax)
   0x0000000000000f65 <+485>:	mov    %r10,0x28(%rax)
   0x0000000000000f69 <+489>:	mov    %r11,0x30(%rax)
   0x0000000000000f6d <+493>:	mov    %r12,0x38(%rax)
   0x0000000000000f71 <+497>:	mov    %r13,0x40(%rax)
   0x0000000000000f75 <+501>:	mov    %r14,0x48(%rax)
   0x0000000000000f79 <+505>:	mov    %r15,0x50(%rax)
   0x0000000000000f7d <+509>:	mov    %rbp,0x58(%rax)
   0x0000000000000f81 <+513>:	mov    %rdi,0x60(%rax)
   0x0000000000000f85 <+517>:	mov    %rsi,0x68(%rax)
   0x0000000000000f89 <+521>:	movq   $0x1,0x70(%rax)
   0x0000000000000f91 <+529>:	mov    (%rbx),%rsp
   0x0000000000000f94 <+532>:	mov    0x40(%rbx),%r13
   0x0000000000000f98 <+536>:	mov    0x8(%rbx),%rcx
   0x0000000000000f9c <+540>:	mov    0x10(%rbx),%rdx
   0x0000000000000fa0 <+544>:	mov    0x18(%rbx),%r8
   0x0000000000000fa4 <+548>:	mov    0x20(%rbx),%r9
   0x0000000000000fa8 <+552>:	mov    0x28(%rbx),%r10
   0x0000000000000fac <+556>:	mov    0x30(%rbx),%r11
   0x0000000000000fb0 <+560>:	mov    0x38(%rbx),%r12
   0x0000000000000fb4 <+564>:	mov    0x48(%rbx),%r14
   0x0000000000000fb8 <+568>:	mov    0x50(%rbx),%r15
   0x0000000000000fbc <+572>:	mov    0x58(%rbx),%rbp
   0x0000000000000fc0 <+576>:	mov    0x60(%rbx),%rdi
   0x0000000000000fc4 <+580>:	mov    0x68(%rbx),%rsi
   0x0000000000000fc8 <+584>:	jmpq   *%rcx
   0x0000000000000fca <+586>:	add    $0x8,%rsp
   0x0000000000000fce <+590>:	lea    0xaad(%rip),%rdi        # 0x1a82
   0x0000000000000fd5 <+597>:	pop    %rbx
   0x0000000000000fd6 <+598>:	pop    %rbp
   0x0000000000000fd7 <+599>:	jmpq   0x920 <puts@plt>
   0x0000000000000fdc <+604>:	nopl   0x0(%rax)
   0x0000000000000fe0 <+608>:	movb   $0x0,0x1c0(%rdx)
   0x0000000000000fe7 <+615>:	mov    %rsp,(%rax)
   0x0000000000000fea <+618>:	lea    0x75(%rip),%rcx        # 0x1066 <pfc+742>
   0x0000000000000ff1 <+625>:	mov    %rcx,0x8(%rax)
   0x0000000000000ff5 <+629>:	mov    %rdx,0x10(%rax)
   0x0000000000000ff9 <+633>:	mov    %r8,0x18(%rax)
   0x0000000000000ffd <+637>:	mov    %r9,0x20(%rax)
   0x0000000000001001 <+641>:	mov    %r10,0x28(%rax)
   0x0000000000001005 <+645>:	mov    %r11,0x30(%rax)
   0x0000000000001009 <+649>:	mov    %r12,0x38(%rax)
   0x000000000000100d <+653>:	mov    %r13,0x40(%rax)
   0x0000000000001011 <+657>:	mov    %r14,0x48(%rax)
   0x0000000000001015 <+661>:	mov    %r15,0x50(%rax)
   0x0000000000001019 <+665>:	mov    %rbp,0x58(%rax)
   0x000000000000101d <+669>:	mov    %rdi,0x60(%rax)
   0x0000000000001021 <+673>:	mov    %rsi,0x68(%rax)
   0x0000000000001025 <+677>:	movq   $0x1,0x70(%rax)
   0x000000000000102d <+685>:	mov    (%rbx),%rsp
   0x0000000000001030 <+688>:	mov    0x40(%rbx),%r13
   0x0000000000001034 <+692>:	mov    0x8(%rbx),%rcx
   0x0000000000001038 <+696>:	mov    0x10(%rbx),%rdx
   0x000000000000103c <+700>:	mov    0x18(%rbx),%r8
   0x0000000000001040 <+704>:	mov    0x20(%rbx),%r9
   0x0000000000001044 <+708>:	mov    0x28(%rbx),%r10
   0x0000000000001048 <+712>:	mov    0x30(%rbx),%r11
   0x000000000000104c <+716>:	mov    0x38(%rbx),%r12
   0x0000000000001050 <+720>:	mov    0x48(%rbx),%r14
   0x0000000000001054 <+724>:	mov    0x50(%rbx),%r15
   0x0000000000001058 <+728>:	mov    0x58(%rbx),%rbp
   0x000000000000105c <+732>:	mov    0x60(%rbx),%rdi
   0x0000000000001060 <+736>:	mov    0x68(%rbx),%rsi
   0x0000000000001064 <+740>:	jmpq   *%rcx
   0x0000000000001066 <+742>:	mov    %esi,0x202094(%rip)        # 0x203100 <myglobal>
   0x000000000000106c <+748>:	add    $0x1,%esi
   0x000000000000106f <+751>:	cmp    $0xa,%esi
   0x0000000000001072 <+754>:	je     0xec2 <pfc+322>
   0x0000000000001078 <+760>:	mov    %fs:0xfffffffffffffffc,%eax
   0x0000000000001080 <+768>:	test   %eax,%eax
   0x0000000000001082 <+770>:	je     0xde0 <pfc+96>
   0x0000000000001088 <+776>:	mov    0x202171(%rip),%rax        # 0x203200 <global_var2>
   0x000000000000108f <+783>:	add    $0x1,%rax
   0x0000000000001093 <+787>:	mov    %rax,0x202166(%rip)        # 0x203200 <global_var2>
   0x000000000000109a <+794>:	jmpq   0xdf2 <pfc+114>
   0x000000000000109f <+799>:	nop
   0x00000000000010a0 <+800>:	movb   $0x1,0x1c0(%rbp)
   0x00000000000010a7 <+807>:	mov    %rsp,(%rax)
   0x00000000000010aa <+810>:	lea    0x75(%rip),%rcx        # 0x1126 <pfc+934>
   0x00000000000010b1 <+817>:	mov    %rcx,0x8(%rax)
   0x00000000000010b5 <+821>:	mov    %rdx,0x10(%rax)
   0x00000000000010b9 <+825>:	mov    %r8,0x18(%rax)
   0x00000000000010bd <+829>:	mov    %r9,0x20(%rax)
   0x00000000000010c1 <+833>:	mov    %r10,0x28(%rax)
   0x00000000000010c5 <+837>:	mov    %r11,0x30(%rax)
   0x00000000000010c9 <+841>:	mov    %r12,0x38(%rax)
   0x00000000000010cd <+845>:	mov    %r13,0x40(%rax)
   0x00000000000010d1 <+849>:	mov    %r14,0x48(%rax)
   0x00000000000010d5 <+853>:	mov    %r15,0x50(%rax)
   0x00000000000010d9 <+857>:	mov    %rbp,0x58(%rax)
   0x00000000000010dd <+861>:	mov    %rdi,0x60(%rax)
   0x00000000000010e1 <+865>:	mov    %rsi,0x68(%rax)
   0x00000000000010e5 <+869>:	movq   $0x0,0x70(%rax)
   0x00000000000010ed <+877>:	mov    (%rbx),%rsp
   0x00000000000010f0 <+880>:	mov    0x40(%rbx),%r13
   0x00000000000010f4 <+884>:	mov    0x8(%rbx),%rcx
   0x00000000000010f8 <+888>:	mov    0x10(%rbx),%rdx
   0x00000000000010fc <+892>:	mov    0x18(%rbx),%r8
   0x0000000000001100 <+896>:	mov    0x20(%rbx),%r9
   0x0000000000001104 <+900>:	mov    0x28(%rbx),%r10
   0x0000000000001108 <+904>:	mov    0x30(%rbx),%r11
   0x000000000000110c <+908>:	mov    0x38(%rbx),%r12
   0x0000000000001110 <+912>:	mov    0x48(%rbx),%r14
   0x0000000000001114 <+916>:	mov    0x50(%rbx),%r15
   0x0000000000001118 <+920>:	mov    0x58(%rbx),%rbp
   0x000000000000111c <+924>:	mov    0x60(%rbx),%rdi
   0x0000000000001120 <+928>:	mov    0x68(%rbx),%rsi
   0x0000000000001124 <+932>:	jmpq   *%rcx
   0x0000000000001126 <+934>:	jmpq   0xfca <pfc+586>
End of assembler dump.
